{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/Service/patient-registration.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/patient-registration/patient-registration.component.html","./src/app/patient-registration/patient-registration.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../Model/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientRegistrationService {\n\n  constructor(private http: HttpClient) { }\n\n\n  public registerPatient(user: User): Observable<User>{\n    console.log(\"User is \"+user);\n    return this.http.post<User>(\"http://localhost:8080/register\", user, {responseType:'text' as 'json'});\n  }\n\n  // public getPatients(){\n  //   return this.http.get<Patient[]>(\"http://localhost:9090/getAllPatients\");\n  // }\n\n  // public getPatientByDistrict(district: string){\n  //   return this.http.get<Patient>(\"http://localhost:9090//findPatient/\" + district);\n  // }\n\n  // public getPatientById(id: string){\n  //   return this.http.get<Patient>(\"http://localhost:9090//findPatient/\" + id);\n  // }\n\n  // public updatePatient(id: number, patient: Patient){\n  //   return this.http.put<Patient>(\"http://localhost:9090/cancel/\" + id, patient);\n  // }\n\n  // public deletePatient(id: number){\n  //   return this.http.delete<Patient>(\"http://localhost:9090/cancel/\" + id);\n  // }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PatientRegistrationComponent } from './patient-registration/patient-registration.component';\n\nconst routes: Routes = [\n  {path:\"\",redirectTo:\"register\",pathMatch:\"full\"},\n   {path:\"register\",component:PatientRegistrationComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'vaccine-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'VaccinationCentreSystem';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http'\nimport { PatientRegistrationComponent } from './patient-registration/patient-registration.component';\nimport { PatientRegistrationService } from './Service/patient-registration.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PatientRegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [PatientRegistrationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6\" class=\"submit-form\" *ngIf=!submitted>\n            <form>\n                <fieldset>\n                    <div class=\"form-group\">\n                        <label for=\"fName\"><span class=\"req\">* </span> First Name: </label>\n                        <input required type=\"text\" [(ngModel)]=\"fName\" name=\"fName\" id=\"fName\"\n                            class=\"form-control phone\" maxlength=\"20\" placeholder=\"Enter your First Name...\" />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"lName\"><span class=\"req\">* </span> last Name: </label>\n                        <input type=\"text\" [(ngModel)]=\"lName\" name=\"lName\" id=\"lName\"\n                            class=\"form-control phone\" maxlength=\"20\" placeholder=\"Enter your Last Name...\" />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"address\"><span class=\"req\">* </span> Address: </label>\n                        <input class=\"form-control\" type=\"text\" [(ngModel)]=\"address\" name=\"address\" id=\"address\" required\n                            placeholder=\"Enter your address\" />\n                        <div id=\"errFirst\"></div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"district\"><span class=\"req\">* </span> District : </label>\n                        <input class=\"form-control\" type=\"text\" [(ngModel)]=\"district\" name=\"district\" id=\"district\"\n                            placeholder=\"Enter your district\" required />\n                        <div id=\"errLast\"></div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"mobile\"><span class=\"req\">* </span> Contact Number: </label>\n                        <input class=\"form-control\" required type=\"text\" [(ngModel)]=\"mobile\" name=\"mobile\"\n                            id=\"mobile\" placeholder=\"Enter your contact number\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <input class=\"btn btn-success\" type=\"submit\" name=\"submit_reg\" value=\"Register\" (click)=\"submit()\">\n                        <input class=\"btn btn\" type=\"reset\" name=\"cancel_reg\" value=\"Cancel\" (click)=\"cancel()\">\n                    </div>\n                </fieldset>\n            </form>\n        </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../Model/User';\nimport { PatientRegistrationService } from '../Service/patient-registration.service';\n\n@Component({\n  selector: 'vaccine-patient-registration',\n  templateUrl: './patient-registration.component.html',\n  styleUrls: ['./patient-registration.component.scss']\n})\nexport class PatientRegistrationComponent implements OnInit {\n\n    id!: number;\n    fName!: string;\n    lName!: string;\n    address!: string;\n    district!: string\n    mobile!: number;\n    submitted: boolean = false;\n\n  constructor(private userService: PatientRegistrationService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  submit(): void{\n    const user: User = {\n      id: this.id,\n      fName: this.fName,\n      lName: this.lName,\n      address: this.address,\n      district: this.district,\n      mobile: this.mobile\n    }\n\n    this.userService.registerPatient(user).subscribe(\n      response=>{\n      console.log(response);\n      this.submitted = true;\n      this.router.navigate(['/getAllUsers']);\n    },\n    error=>{\n      console.log(console.error());\n    }\n    )\n  };\n\n  cancel(): void {\n    this.submitted = false;\n    this.id=0,\n    this.fName = \"\",\n    this.lName = \"\",\n    this.address = \"\",\n    this.district = \"\",\n    this.mobile = 0;\n    };\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}